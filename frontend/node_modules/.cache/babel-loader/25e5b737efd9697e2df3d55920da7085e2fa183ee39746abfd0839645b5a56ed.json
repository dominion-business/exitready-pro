{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add JWT token to all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token expiration\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Authentication API functions\nexport const register = async data => {\n  try {\n    const response = await api.post('/auth/register', data);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const login = async data => {\n  try {\n    const response = await api.post('/auth/login', data);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getCurrentUser = async () => {\n  try {\n    const response = await api.get('/auth/me');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","register","data","post","login","getCurrentUser","get"],"sources":["C:/Users/Cameron/projects/exitready-pro/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add JWT token to all requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Authentication API functions\r\nexport const register = async (data) => {\r\n  try {\r\n    const response = await api.post('/auth/register', data);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const login = async (data) => {\r\n  try {\r\n    const response = await api.post('/auth/login', data);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = async () => {\r\n  try {\r\n    const response = await api.get('/auth/me');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACtC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMf,GAAG,CAACwB,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;IACvD,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,KAAK,GAAG,MAAOF,IAAI,IAAK;EACnC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMf,GAAG,CAACwB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;IACpD,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMf,GAAG,CAAC2B,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOZ,QAAQ,CAACQ,IAAI;EACtB,CAAC,CAAC,OAAOX,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}