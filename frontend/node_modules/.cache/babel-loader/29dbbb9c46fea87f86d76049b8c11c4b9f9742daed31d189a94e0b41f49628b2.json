{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cameron\\\\projects\\\\exitready-pro\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport AuthForm from './components/AuthForm';\nimport Dashboard from './components/Dashboard';\nimport { Loader2 } from 'lucide-react';\n\n// Loading component for authentication check\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthLoadingScreen = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        className: \"h-12 w-12 text-blue-600 animate-spin mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-lg\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-sm mt-2\",\n        children: \"Checking authentication status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n// Protected Route component\n_c = AuthLoadingScreen;\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AuthLoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render protected content if authenticated\n  return children;\n};\n\n// Main app content with routing\n_s(ProtectedRoute, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n  return [useAuth];\n});\n_c2 = ProtectedRoute;\nconst AppContent = () => {\n  _s2();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n\n  // Show loading screen while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AuthLoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App component\n_s2(AppContent, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n  return [useAuth];\n});\n_c3 = AppContent;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AuthLoadingScreen\");\n$RefreshReg$(_c2, \"ProtectedRoute\");\n$RefreshReg$(_c3, \"AppContent\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AuthProvider","useAuth","AuthForm","Dashboard","Loader2","jsxDEV","_jsxDEV","AuthLoadingScreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProtectedRoute","_s","isAuthenticated","loading","to","replace","_c2","AppContent","_s2","path","element","_c3","App","_c4","$RefreshReg$"],"sources":["C:/Users/Cameron/projects/exitready-pro/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport AuthForm from './components/AuthForm';\nimport Dashboard from './components/Dashboard';\nimport { Loader2 } from 'lucide-react';\n\n// Loading component for authentication check\nconst AuthLoadingScreen = () => {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"flex flex-col items-center\">\n        <Loader2 className=\"h-12 w-12 text-blue-600 animate-spin mb-4\" />\n        <p className=\"text-gray-600 text-lg\">Loading...</p>\n        <p className=\"text-gray-500 text-sm mt-2\">Checking authentication status</p>\n      </div>\n    </div>\n  );\n};\n\n// Protected Route component\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated, loading } = useAuth();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return <AuthLoadingScreen />;\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  // Render protected content if authenticated\n  return children;\n};\n\n// Main app content with routing\nconst AppContent = () => {\n  const { isAuthenticated, loading } = useAuth();\n\n  // Show loading screen while checking authentication\n  if (loading) {\n    return <AuthLoadingScreen />;\n  }\n\n  return (\n    <Router>\n      <Routes>\n        {/* Root route - show AuthForm if not logged in, redirect to dashboard if logged in */}\n        <Route \n          path=\"/\" \n          element={\n            isAuthenticated ? <Navigate to=\"/dashboard\" replace /> : <AuthForm />\n          } \n        />\n        \n        {/* Dashboard route - protected */}\n        <Route \n          path=\"/dashboard\" \n          element={\n            <ProtectedRoute>\n              <Dashboard />\n            </ProtectedRoute>\n          } \n        />\n        \n        {/* Catch all route - redirect to appropriate page */}\n        <Route \n          path=\"*\" \n          element={\n            isAuthenticated ? <Navigate to=\"/dashboard\" replace /> : <Navigate to=\"/\" replace />\n          } \n        />\n      </Routes>\n    </Router>\n  );\n};\n\n// Main App component\nconst App = () => {\n  return (\n    <AuthProvider>\n      <AppContent />\n    </AuthProvider>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}