{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add JWT token to all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token expiration\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\n\n// Assessment API Functions\n\nexport const startAssessment = async () => {\n  try {\n    const response = await api.post('/assessment/start');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Error starting assessment:', error);\n    return {\n      success: false,\n      error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || 'Failed to start assessment'\n    };\n  }\n};\nexport const getAssessment = async () => {\n  try {\n    const response = await api.get('/assessment');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error('Error getting assessment:', error);\n    return {\n      success: false,\n      error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message || 'Failed to get assessment'\n    };\n  }\n};\nexport const saveAssessmentResponse = async responseData => {\n  try {\n    const response = await api.post('/assessment/response', responseData);\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    console.error('Error saving response:', error);\n    return {\n      success: false,\n      error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || error.message || 'Failed to save response'\n    };\n  }\n};\nexport const getAssessmentTasks = async () => {\n  try {\n    const response = await api.get('/assessment/tasks');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    console.error('Error getting tasks:', error);\n    return {\n      success: false,\n      error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || error.message || 'Failed to get tasks'\n    };\n  }\n};\nexport const updateTaskStatus = async (taskId, status) => {\n  try {\n    const response = await api.put(`/assessment/task/${taskId}/status`, {\n      status\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    console.error('Error updating task:', error);\n    return {\n      success: false,\n      error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || error.message || 'Failed to update task'\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","startAssessment","post","success","data","_error$response2","_error$response2$data","console","message","getAssessment","get","_error$response3","_error$response3$data","saveAssessmentResponse","responseData","_error$response4","_error$response4$data","getAssessmentTasks","_error$response5","_error$response5$data","updateTaskStatus","taskId","put","_error$response6","_error$response6$data"],"sources":["C:/Users/Cameron/projects/exitready-pro/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add JWT token to all requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Assessment API Functions\r\n\r\nexport const startAssessment = async () => {\r\n  try {\r\n    const response = await api.post('/assessment/start');\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('Error starting assessment:', error);\r\n    return {\r\n      success: false,\r\n      error: error.response?.data?.error || error.message || 'Failed to start assessment'\r\n    };\r\n  }\r\n};\r\n\r\nexport const getAssessment = async () => {\r\n  try {\r\n    const response = await api.get('/assessment');\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('Error getting assessment:', error);\r\n    return {\r\n      success: false,\r\n      error: error.response?.data?.error || error.message || 'Failed to get assessment'\r\n    };\r\n  }\r\n};\r\n\r\nexport const saveAssessmentResponse = async (responseData) => {\r\n  try {\r\n    const response = await api.post('/assessment/response', responseData);\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('Error saving response:', error);\r\n    return {\r\n      success: false,\r\n      error: error.response?.data?.error || error.message || 'Failed to save response'\r\n    };\r\n  }\r\n};\r\n\r\nexport const getAssessmentTasks = async () => {\r\n  try {\r\n    const response = await api.get('/assessment/tasks');\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('Error getting tasks:', error);\r\n    return {\r\n      success: false,\r\n      error: error.response?.data?.error || error.message || 'Failed to get tasks'\r\n    };\r\n  }\r\n};\r\n\r\nexport const updateTaskStatus = async (taskId, status) => {\r\n  try {\r\n    const response = await api.put(`/assessment/task/${taskId}/status`, { status });\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error('Error updating task:', error);\r\n    return {\r\n      success: false,\r\n      error: error.response?.data?.error || error.message || 'Failed to update task'\r\n    };\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}