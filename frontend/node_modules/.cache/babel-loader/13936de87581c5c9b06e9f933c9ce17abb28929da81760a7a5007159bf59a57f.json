{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cameron\\\\projects\\\\exitready-pro\\\\frontend\\\\src\\\\components\\\\AssessmentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { X, ChevronDown, ChevronRight, Check } from 'lucide-react';\nimport { saveAssessmentResponse } from '../services/api';\nimport ScoringGuide from './ScoringGuide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentModal = ({\n  assessmentId,\n  allQuestions,\n  answeredQuestions,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [saving, setSaving] = useState(false);\n\n  // Initialize answers from already answered questions\n  useEffect(() => {\n    const initialAnswers = {};\n    answeredQuestions.forEach(q => {\n      initialAnswers[q.question_id] = q.answer_value;\n    });\n    setAnswers(initialAnswers);\n  }, [answeredQuestions]);\n\n  // Organize questions by category and subject\n  const organizeQuestions = () => {\n    const organized = {};\n    allQuestions.forEach(q => {\n      if (!organized[q.category]) {\n        organized[q.category] = {\n          name: q.category_display,\n          key: q.category,\n          subjects: {}\n        };\n      }\n      if (!organized[q.category].subjects[q.subject]) {\n        organized[q.category].subjects[q.subject] = {\n          name: q.subject,\n          questions: []\n        };\n      }\n      organized[q.category].subjects[q.subject].questions.push(q);\n    });\n    return organized;\n  };\n  const questionsByCategory = organizeQuestions();\n  const categoryKeys = Object.keys(questionsByCategory);\n\n  // Auto-expand first category\n  useEffect(() => {\n    if (categoryKeys.length > 0 && !expandedCategory) {\n      setExpandedCategory(categoryKeys[0]);\n    }\n  }, [categoryKeys, expandedCategory]);\n  const handleAnswerChange = async (question, value) => {\n    // Update local state\n    setAnswers(prev => ({\n      ...prev,\n      [question.question_id]: value\n    }));\n\n    // Save to backend immediately\n    try {\n      const responseData = {\n        assessment_id: assessmentId,\n        question_id: question.question_id,\n        category: question.category,\n        subject: question.subject,\n        question_text: question.question_text,\n        answer_value: value,\n        answer_text: getAnswerText(value, question.question_type),\n        comments: '',\n        rule_of_thumb: question.rule_of_thumb,\n        considerations: question.considerations,\n        related_task: question.related_task\n      };\n      const result = await saveAssessmentResponse(responseData);\n      if (!result.success) {\n        console.error('Failed to save:', result.error);\n        alert('Failed to save response: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error saving answer:', error);\n      alert('Error saving response. Please try again.');\n    }\n  };\n  const getAnswerText = (value, questionType = 'strength') => {\n    if (value === 0) return 'N/A - Not Applicable';\n    if (questionType === 'documentation') {\n      const docLabels = {\n        1: \"I Don't Know What You're Talking About\",\n        2: \"I've Heard About It, But It's Not Clear\",\n        3: \"It's Clear, But Not Documented\",\n        4: \"It's Clear & Documented, But Not Transferable\",\n        5: \"It's Clear, Documented, & Transferable\",\n        6: \"It's Perfect - No Improvement Possible\"\n      };\n      return docLabels[value] || '';\n    }\n\n    // Strength questions (default)\n    const strengthLabels = {\n      1: 'Weaker Than All Others',\n      2: 'Weaker Than Most',\n      3: 'Weak, But Gaining Strength',\n      4: 'Strong, And Getting Stronger',\n      5: 'Stronger Than Most',\n      6: 'Stronger Than All Others'\n    };\n    return strengthLabels[value] || '';\n  };\n  const getButtonColor = (value, isSelected) => {\n    if (isSelected) {\n      const selectedColors = {\n        0: 'bg-gray-400 border-gray-600 text-white shadow-lg',\n        1: 'bg-red-500 border-red-700 text-white shadow-lg',\n        2: 'bg-orange-400 border-orange-600 text-white shadow-lg',\n        3: 'bg-yellow-400 border-yellow-600 text-gray-900 shadow-lg',\n        4: 'bg-lime-400 border-lime-600 text-gray-900 shadow-lg',\n        5: 'bg-green-500 border-green-700 text-white shadow-lg',\n        6: 'bg-amber-600 border-amber-800 text-white shadow-lg'\n      };\n      return selectedColors[value] || selectedColors[0];\n    }\n    const unselectedColors = {\n      0: 'bg-white border-gray-300 text-gray-700 hover:border-gray-400 hover:bg-gray-50',\n      1: 'bg-white border-red-200 text-red-700 hover:border-red-400 hover:bg-red-50',\n      2: 'bg-white border-orange-200 text-orange-700 hover:border-orange-400 hover:bg-orange-50',\n      3: 'bg-white border-yellow-200 text-yellow-700 hover:border-yellow-400 hover:bg-yellow-50',\n      4: 'bg-white border-lime-200 text-lime-700 hover:border-lime-400 hover:bg-lime-50',\n      5: 'bg-white border-green-200 text-green-700 hover:border-green-400 hover:bg-green-50',\n      6: 'bg-white border-amber-200 text-amber-700 hover:border-amber-400 hover:bg-amber-50'\n    };\n    return unselectedColors[value] || unselectedColors[0];\n  };\n  const getAnswerBadgeColor = value => {\n    const colors = {\n      0: 'bg-gray-100 text-gray-800 border-gray-300',\n      1: 'bg-red-100 text-red-800 border-red-300',\n      2: 'bg-orange-100 text-orange-800 border-orange-300',\n      3: 'bg-yellow-100 text-yellow-800 border-yellow-300',\n      4: 'bg-lime-100 text-lime-800 border-lime-300',\n      5: 'bg-green-100 text-green-800 border-green-300',\n      6: 'bg-amber-100 text-amber-800 border-amber-300'\n    };\n    return colors[value] || colors[0];\n  };\n  const getAnsweredCount = category => {\n    let count = 0;\n    const subjects = questionsByCategory[category].subjects;\n    Object.values(subjects).forEach(subject => {\n      subject.questions.forEach(q => {\n        if (answers[q.question_id] !== undefined) {\n          count++;\n        }\n      });\n    });\n    return count;\n  };\n  const getTotalQuestionsInCategory = category => {\n    let count = 0;\n    const subjects = questionsByCategory[category].subjects;\n    Object.values(subjects).forEach(subject => {\n      count += subject.questions.length;\n    });\n    return count;\n  };\n  const totalAnswered = Object.keys(answers).length;\n  const totalQuestions = allQuestions.length;\n  const progressPercent = totalAnswered / totalQuestions * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-2xl w-full max-w-6xl max-h-[90vh] flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-6 border-b border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-900\",\n            children: \"Exit Readiness Assessment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mt-1\",\n            children: \"Answer all questions to assess your business attractiveness for exit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-400 hover:text-gray-600 transition ml-4\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 28\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 bg-blue-50 border-b border-blue-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-semibold text-blue-900\",\n            children: [\"Progress: \", totalAnswered, \" / \", totalQuestions, \" questions answered\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-semibold text-blue-900\",\n            children: [Math.round(progressPercent), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-blue-200 rounded-full h-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 h-3 rounded-full transition-all duration-500\",\n            style: {\n              width: `${progressPercent}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-6\",\n        children: [/*#__PURE__*/_jsxDEV(ScoringGuide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4 mt-6\",\n          children: categoryKeys.map(catKey => {\n            const category = questionsByCategory[catKey];\n            const isExpanded = expandedCategory === catKey;\n            const subjects = Object.keys(category.subjects);\n            const answeredCount = getAnsweredCount(catKey);\n            const totalCount = getTotalQuestionsInCategory(catKey);\n            const categoryComplete = answeredCount === totalCount;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg overflow-hidden\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between p-4 bg-gray-50 cursor-pointer hover:bg-gray-100 transition\",\n                onClick: () => setExpandedCategory(isExpanded ? null : catKey),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-3 flex-1\",\n                  children: [isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 20,\n                    className: \"text-gray-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                    size: 20,\n                    className: \"text-gray-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-bold text-lg text-gray-900\",\n                    children: category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), categoryComplete && /*#__PURE__*/_jsxDEV(Check, {\n                    size: 20,\n                    className: \"text-green-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-semibold text-gray-600\",\n                  children: [answeredCount, \" / \", totalCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-white space-y-6\",\n                children: subjects.map(subjectKey => {\n                  const subject = category.subjects[subjectKey];\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-semibold text-md text-gray-800 border-b pb-2\",\n                      children: subject.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 29\n                    }, this), subject.questions.map(question => {\n                      const currentAnswer = answers[question.question_id];\n                      const isAnswered = currentAnswer !== undefined;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `p-4 rounded-lg border-2 transition ${isAnswered ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-white'}`,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mb-4\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm font-medium text-gray-900\",\n                            children: question.question_text\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 289,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"space-y-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-xs font-medium text-gray-700\",\n                            children: \"Select your response (0 = Not Applicable):\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 296,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"grid grid-cols-7 gap-2\",\n                            children: [0, 1, 2, 3, 4, 5, 6].map(value => {\n                              const isSelected = currentAnswer === value;\n                              const shortLabels = {\n                                0: 'N/A',\n                                1: '1',\n                                2: '2',\n                                3: '3',\n                                4: '4',\n                                5: '5',\n                                6: '6'\n                              };\n                              return /*#__PURE__*/_jsxDEV(\"button\", {\n                                type: \"button\",\n                                onClick: () => handleAnswerChange(question, value),\n                                className: `p-3 rounded-lg border-2 transition-all text-center ${getButtonColor(value, isSelected)} ${isSelected ? 'scale-105' : ''}`,\n                                title: getAnswerText(value, question.question_type),\n                                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"text-2xl font-bold\",\n                                  children: shortLabels[value]\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 322,\n                                  columnNumber: 45\n                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: `text-xs mt-1 ${isSelected ? '' : 'text-gray-500'}`,\n                                  children: value === 0 ? 'N/A' : `${value === 1 ? 17 : value === 2 ? 33 : value === 3 ? 50 : value === 4 ? 67 : value === 5 ? 83 : 100}%`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 323,\n                                  columnNumber: 45\n                                }, this)]\n                              }, value, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 313,\n                                columnNumber: 43\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 299,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 35\n                        }, this), isAnswered && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mt-3 flex items-center space-x-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getAnswerBadgeColor(currentAnswer)}`,\n                            children: [/*#__PURE__*/_jsxDEV(Check, {\n                              size: 14,\n                              className: \"mr-1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 338,\n                              columnNumber: 41\n                            }, this), getAnswerText(currentAnswer, question.question_type)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 335,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 334,\n                          columnNumber: 37\n                        }, this)]\n                      }, question.question_id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 33\n                      }, this);\n                    })]\n                  }, subjectKey, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this)]\n            }, catKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: totalAnswered === totalQuestions ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-600 font-semibold\",\n            children: \"\\u2713 Assessment Complete! Click \\\"Finish\\\" to view your results.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [totalQuestions - totalAnswered, \" questions remaining\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: `px-6 py-3 rounded-lg font-semibold transition ${totalAnswered === totalQuestions ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-blue-600 text-white hover:bg-blue-700'}`,\n          children: totalAnswered === totalQuestions ? 'Finish & View Results' : 'Save & Close'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(AssessmentModal, \"byaFpJ0f97qwh9IStmHT1N1RRCA=\");\n_c = AssessmentModal;\nexport default AssessmentModal;\nvar _c;\n$RefreshReg$(_c, \"AssessmentModal\");","map":{"version":3,"names":["React","useState","useEffect","X","ChevronDown","ChevronRight","Check","saveAssessmentResponse","ScoringGuide","jsxDEV","_jsxDEV","AssessmentModal","assessmentId","allQuestions","answeredQuestions","onClose","onSave","_s","expandedCategory","setExpandedCategory","answers","setAnswers","saving","setSaving","initialAnswers","forEach","q","question_id","answer_value","organizeQuestions","organized","category","name","category_display","key","subjects","subject","questions","push","questionsByCategory","categoryKeys","Object","keys","length","handleAnswerChange","question","value","prev","responseData","assessment_id","question_text","answer_text","getAnswerText","question_type","comments","rule_of_thumb","considerations","related_task","result","success","console","error","alert","questionType","docLabels","strengthLabels","getButtonColor","isSelected","selectedColors","unselectedColors","getAnswerBadgeColor","colors","getAnsweredCount","count","values","undefined","getTotalQuestionsInCategory","totalAnswered","totalQuestions","progressPercent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","Math","round","style","width","map","catKey","isExpanded","answeredCount","totalCount","categoryComplete","subjectKey","currentAnswer","isAnswered","shortLabels","type","title","_c","$RefreshReg$"],"sources":["C:/Users/Cameron/projects/exitready-pro/frontend/src/components/AssessmentModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, ChevronDown, ChevronRight, Check } from 'lucide-react';\nimport { saveAssessmentResponse } from '../services/api';\nimport ScoringGuide from './ScoringGuide';\n\nconst AssessmentModal = ({ assessmentId, allQuestions, answeredQuestions, onClose, onSave }) => {\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [saving, setSaving] = useState(false);\n\n  // Initialize answers from already answered questions\n  useEffect(() => {\n    const initialAnswers = {};\n    answeredQuestions.forEach(q => {\n      initialAnswers[q.question_id] = q.answer_value;\n    });\n    setAnswers(initialAnswers);\n  }, [answeredQuestions]);\n\n  // Organize questions by category and subject\n  const organizeQuestions = () => {\n    const organized = {};\n    \n    allQuestions.forEach(q => {\n      if (!organized[q.category]) {\n        organized[q.category] = {\n          name: q.category_display,\n          key: q.category,\n          subjects: {}\n        };\n      }\n      \n      if (!organized[q.category].subjects[q.subject]) {\n        organized[q.category].subjects[q.subject] = {\n          name: q.subject,\n          questions: []\n        };\n      }\n      \n      organized[q.category].subjects[q.subject].questions.push(q);\n    });\n    \n    return organized;\n  };\n\n  const questionsByCategory = organizeQuestions();\n  const categoryKeys = Object.keys(questionsByCategory);\n\n  // Auto-expand first category\n  useEffect(() => {\n    if (categoryKeys.length > 0 && !expandedCategory) {\n      setExpandedCategory(categoryKeys[0]);\n    }\n  }, [categoryKeys, expandedCategory]);\n\n  const handleAnswerChange = async (question, value) => {\n    // Update local state\n    setAnswers(prev => ({\n      ...prev,\n      [question.question_id]: value\n    }));\n\n    // Save to backend immediately\n    try {\n      const responseData = {\n        assessment_id: assessmentId,\n        question_id: question.question_id,\n        category: question.category,\n        subject: question.subject,\n        question_text: question.question_text,\n        answer_value: value,\n        answer_text: getAnswerText(value, question.question_type),\n        comments: '',\n        rule_of_thumb: question.rule_of_thumb,\n        considerations: question.considerations,\n        related_task: question.related_task\n      };\n\n      const result = await saveAssessmentResponse(responseData);\n\n      if (!result.success) {\n        console.error('Failed to save:', result.error);\n        alert('Failed to save response: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error saving answer:', error);\n      alert('Error saving response. Please try again.');\n    }\n  };\n\n  const getAnswerText = (value, questionType = 'strength') => {\n    if (value === 0) return 'N/A - Not Applicable';\n    \n    if (questionType === 'documentation') {\n      const docLabels = {\n        1: \"I Don't Know What You're Talking About\",\n        2: \"I've Heard About It, But It's Not Clear\",\n        3: \"It's Clear, But Not Documented\",\n        4: \"It's Clear & Documented, But Not Transferable\",\n        5: \"It's Clear, Documented, & Transferable\",\n        6: \"It's Perfect - No Improvement Possible\"\n      };\n      return docLabels[value] || '';\n    }\n    \n    // Strength questions (default)\n    const strengthLabels = {\n      1: 'Weaker Than All Others',\n      2: 'Weaker Than Most',\n      3: 'Weak, But Gaining Strength',\n      4: 'Strong, And Getting Stronger',\n      5: 'Stronger Than Most',\n      6: 'Stronger Than All Others'\n    };\n    return strengthLabels[value] || '';\n  };\n\n  const getButtonColor = (value, isSelected) => {\n    if (isSelected) {\n      const selectedColors = {\n        0: 'bg-gray-400 border-gray-600 text-white shadow-lg',\n        1: 'bg-red-500 border-red-700 text-white shadow-lg',\n        2: 'bg-orange-400 border-orange-600 text-white shadow-lg',\n        3: 'bg-yellow-400 border-yellow-600 text-gray-900 shadow-lg',\n        4: 'bg-lime-400 border-lime-600 text-gray-900 shadow-lg',\n        5: 'bg-green-500 border-green-700 text-white shadow-lg',\n        6: 'bg-amber-600 border-amber-800 text-white shadow-lg'\n      };\n      return selectedColors[value] || selectedColors[0];\n    }\n    \n    const unselectedColors = {\n      0: 'bg-white border-gray-300 text-gray-700 hover:border-gray-400 hover:bg-gray-50',\n      1: 'bg-white border-red-200 text-red-700 hover:border-red-400 hover:bg-red-50',\n      2: 'bg-white border-orange-200 text-orange-700 hover:border-orange-400 hover:bg-orange-50',\n      3: 'bg-white border-yellow-200 text-yellow-700 hover:border-yellow-400 hover:bg-yellow-50',\n      4: 'bg-white border-lime-200 text-lime-700 hover:border-lime-400 hover:bg-lime-50',\n      5: 'bg-white border-green-200 text-green-700 hover:border-green-400 hover:bg-green-50',\n      6: 'bg-white border-amber-200 text-amber-700 hover:border-amber-400 hover:bg-amber-50'\n    };\n    return unselectedColors[value] || unselectedColors[0];\n  };\n\n  const getAnswerBadgeColor = (value) => {\n    const colors = {\n      0: 'bg-gray-100 text-gray-800 border-gray-300',\n      1: 'bg-red-100 text-red-800 border-red-300',\n      2: 'bg-orange-100 text-orange-800 border-orange-300',\n      3: 'bg-yellow-100 text-yellow-800 border-yellow-300',\n      4: 'bg-lime-100 text-lime-800 border-lime-300',\n      5: 'bg-green-100 text-green-800 border-green-300',\n      6: 'bg-amber-100 text-amber-800 border-amber-300'\n    };\n    return colors[value] || colors[0];\n  };\n\n  const getAnsweredCount = (category) => {\n    let count = 0;\n    const subjects = questionsByCategory[category].subjects;\n    \n    Object.values(subjects).forEach(subject => {\n      subject.questions.forEach(q => {\n        if (answers[q.question_id] !== undefined) {\n          count++;\n        }\n      });\n    });\n    \n    return count;\n  };\n\n  const getTotalQuestionsInCategory = (category) => {\n    let count = 0;\n    const subjects = questionsByCategory[category].subjects;\n    \n    Object.values(subjects).forEach(subject => {\n      count += subject.questions.length;\n    });\n    \n    return count;\n  };\n\n  const totalAnswered = Object.keys(answers).length;\n  const totalQuestions = allQuestions.length;\n  const progressPercent = (totalAnswered / totalQuestions) * 100;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-6xl max-h-[90vh] flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex-1\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Exit Readiness Assessment</h2>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              Answer all questions to assess your business attractiveness for exit\n            </p>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition ml-4\"\n          >\n            <X size={28} />\n          </button>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"px-6 py-4 bg-blue-50 border-b border-blue-100\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-semibold text-blue-900\">\n              Progress: {totalAnswered} / {totalQuestions} questions answered\n            </span>\n            <span className=\"text-sm font-semibold text-blue-900\">\n              {Math.round(progressPercent)}%\n            </span>\n          </div>\n          <div className=\"w-full bg-blue-200 rounded-full h-3\">\n            <div\n              className=\"bg-blue-600 h-3 rounded-full transition-all duration-500\"\n              style={{ width: `${progressPercent}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Content - Scrollable */}\n        <div className=\"flex-1 overflow-y-auto p-6\">\n          {/* Scoring Guide */}\n          <ScoringGuide />\n\n          {/* Questions */}\n          <div className=\"space-y-4 mt-6\">\n            {categoryKeys.map((catKey) => {\n              const category = questionsByCategory[catKey];\n              const isExpanded = expandedCategory === catKey;\n              const subjects = Object.keys(category.subjects);\n              const answeredCount = getAnsweredCount(catKey);\n              const totalCount = getTotalQuestionsInCategory(catKey);\n              const categoryComplete = answeredCount === totalCount;\n\n              return (\n                <div key={catKey} className=\"border border-gray-200 rounded-lg overflow-hidden\">\n                  {/* Category Header */}\n                  <div\n                    className=\"flex items-center justify-between p-4 bg-gray-50 cursor-pointer hover:bg-gray-100 transition\"\n                    onClick={() => setExpandedCategory(isExpanded ? null : catKey)}\n                  >\n                    <div className=\"flex items-center space-x-3 flex-1\">\n                      {isExpanded ? (\n                        <ChevronDown size={20} className=\"text-gray-600\" />\n                      ) : (\n                        <ChevronRight size={20} className=\"text-gray-600\" />\n                      )}\n                      <h3 className=\"font-bold text-lg text-gray-900\">{category.name}</h3>\n                      {categoryComplete && (\n                        <Check size={20} className=\"text-green-600\" />\n                      )}\n                    </div>\n                    <span className=\"text-sm font-semibold text-gray-600\">\n                      {answeredCount} / {totalCount}\n                    </span>\n                  </div>\n\n                  {/* Category Content */}\n                  {isExpanded && (\n                    <div className=\"p-4 bg-white space-y-6\">\n                      {subjects.map((subjectKey) => {\n                        const subject = category.subjects[subjectKey];\n                        \n                        return (\n                          <div key={subjectKey} className=\"space-y-4\">\n                            <h4 className=\"font-semibold text-md text-gray-800 border-b pb-2\">\n                              {subject.name}\n                            </h4>\n                            \n                            {subject.questions.map((question) => {\n                              const currentAnswer = answers[question.question_id];\n                              const isAnswered = currentAnswer !== undefined;\n\n                              return (\n                                <div\n                                  key={question.question_id}\n                                  className={`p-4 rounded-lg border-2 transition ${\n                                    isAnswered\n                                      ? 'border-green-200 bg-green-50'\n                                      : 'border-gray-200 bg-white'\n                                  }`}\n                                >\n                                  {/* Question Text */}\n                                  <div className=\"mb-4\">\n                                    <p className=\"text-sm font-medium text-gray-900\">\n                                      {question.question_text}\n                                    </p>\n                                  </div>\n\n                                  {/* Button Scale 0-6 */}\n                                  <div className=\"space-y-2\">\n                                    <label className=\"block text-xs font-medium text-gray-700\">\n                                      Select your response (0 = Not Applicable):\n                                    </label>\n                                    <div className=\"grid grid-cols-7 gap-2\">\n                                      {[0, 1, 2, 3, 4, 5, 6].map((value) => {\n                                        const isSelected = currentAnswer === value;\n                                        const shortLabels = {\n                                          0: 'N/A',\n                                          1: '1',\n                                          2: '2',\n                                          3: '3',\n                                          4: '4',\n                                          5: '5',\n                                          6: '6'\n                                        };\n\n                                        return (\n                                          <button\n                                            key={value}\n                                            type=\"button\"\n                                            onClick={() => handleAnswerChange(question, value)}\n                                            className={`p-3 rounded-lg border-2 transition-all text-center ${\n                                              getButtonColor(value, isSelected)\n                                            } ${isSelected ? 'scale-105' : ''}`}\n                                            title={getAnswerText(value, question.question_type)}\n                                          >\n                                            <div className=\"text-2xl font-bold\">{shortLabels[value]}</div>\n                                            <div className={`text-xs mt-1 ${isSelected ? '' : 'text-gray-500'}`}>\n                                              {value === 0 ? 'N/A' : `${value === 1 ? 17 : value === 2 ? 33 : value === 3 ? 50 : value === 4 ? 67 : value === 5 ? 83 : 100}%`}\n                                            </div>\n                                          </button>\n                                        );\n                                      })}\n                                    </div>\n                                  </div>\n\n                                  {/* Answered Badge */}\n                                  {isAnswered && (\n                                    <div className=\"mt-3 flex items-center space-x-2\">\n                                      <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${\n                                        getAnswerBadgeColor(currentAnswer)\n                                      }`}>\n                                        <Check size={14} className=\"mr-1\" />\n                                        {getAnswerText(currentAnswer, question.question_type)}\n                                      </span>\n                                    </div>\n                                  )}\n                                </div>\n                              );\n                            })}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\">\n          <div className=\"text-sm text-gray-600\">\n            {totalAnswered === totalQuestions ? (\n              <span className=\"text-green-600 font-semibold\">\n                ✓ Assessment Complete! Click \"Finish\" to view your results.\n              </span>\n            ) : (\n              <span>\n                {totalQuestions - totalAnswered} questions remaining\n              </span>\n            )}\n          </div>\n          <button\n            onClick={onClose}\n            className={`px-6 py-3 rounded-lg font-semibold transition ${\n              totalAnswered === totalQuestions\n                ? 'bg-green-600 text-white hover:bg-green-700'\n                : 'bg-blue-600 text-white hover:bg-blue-700'\n            }`}\n          >\n            {totalAnswered === totalQuestions ? 'Finish & View Results' : 'Save & Close'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssessmentModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}