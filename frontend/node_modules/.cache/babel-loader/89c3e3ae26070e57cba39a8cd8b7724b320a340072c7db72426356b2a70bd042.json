{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add JWT token to all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token expiration\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\n\n// Assessment API Functions\n// Add these to your existing services/api.js file\n\nexport const startAssessment = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch('http://localhost:5000/api/assessment/start', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (response.ok) {\n      return {\n        success: true,\n        data\n      };\n    } else {\n      return {\n        success: false,\n        error: data.error || 'Failed to start assessment'\n      };\n    }\n  } catch (error) {\n    console.error('Error starting assessment:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getAssessment = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('No authentication token found');\n  }\n  const response = await fetch(`${API_BASE_URL}/api/assessment`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || error.msg || 'Failed to get assessment');\n  }\n  return response.json();\n};\nexport const saveAssessmentResponse = async responseData => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch('http://localhost:5000/api/assessment/response', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(responseData)\n    });\n    const data = await response.json();\n    if (response.ok) {\n      return {\n        success: true,\n        data\n      };\n    } else {\n      return {\n        success: false,\n        error: data.error || 'Failed to save response'\n      };\n    }\n  } catch (error) {\n    console.error('Error saving response:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getAssessmentTasks = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch('http://localhost:5000/api/assessment/tasks', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (response.ok) {\n      return {\n        success: true,\n        data\n      };\n    } else {\n      return {\n        success: false,\n        error: data.error || 'Failed to get tasks'\n      };\n    }\n  } catch (error) {\n    console.error('Error getting tasks:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const updateTaskStatus = async (taskId, status) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`http://localhost:5000/api/assessment/task/${taskId}/status`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        status\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      return {\n        success: true,\n        data\n      };\n    } else {\n      return {\n        success: false,\n        error: data.error || 'Failed to update task'\n      };\n    }\n  } catch (error) {\n    console.error('Error updating task:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","startAssessment","fetch","method","data","json","ok","success","console","message","getAssessment","Error","API_BASE_URL","msg","saveAssessmentResponse","responseData","body","JSON","stringify","getAssessmentTasks","updateTaskStatus","taskId"],"sources":["C:/Users/Cameron/projects/exitready-pro/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add JWT token to all requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Assessment API Functions\r\n// Add these to your existing services/api.js file\r\n\r\nexport const startAssessment = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch('http://localhost:5000/api/assessment/start', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      return { success: true, data };\r\n    } else {\r\n      return { success: false, error: data.error || 'Failed to start assessment' };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error starting assessment:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\nexport const getAssessment = async () => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if (!token) {\r\n    throw new Error('No authentication token found');\r\n  }\r\n\r\n  const response = await fetch(`${API_BASE_URL}/api/assessment`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw new Error(error.error || error.msg || 'Failed to get assessment');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const saveAssessmentResponse = async (responseData) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch('http://localhost:5000/api/assessment/response', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(responseData)\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      return { success: true, data };\r\n    } else {\r\n      return { success: false, error: data.error || 'Failed to save response' };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error saving response:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\nexport const getAssessmentTasks = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch('http://localhost:5000/api/assessment/tasks', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      return { success: true, data };\r\n    } else {\r\n      return { success: false, error: data.error || 'Failed to get tasks' };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error getting tasks:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\nexport const updateTaskStatus = async (taskId, status) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`http://localhost:5000/api/assessment/task/${taskId}/status`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ status })\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      return { success: true, data };\r\n    } else {\r\n      return { success: false, error: data.error || 'Failed to update task' };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating task:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}