{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cameron\\\\projects\\\\exitready-pro\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on mount\n  const checkAuth = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (token) {\n        const userData = await getCurrentUser();\n        setUser(userData);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      // Clear invalid token\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const loginUser = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await login({\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const registerUser = async (email, password, fullName) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await register({\n        email,\n        password,\n        fullName\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logoutUser = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setError(null);\n  };\n\n  // Clear error function\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Check authentication on component mount\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const value = {\n    user,\n    loading,\n    error,\n    login: loginUser,\n    register: registerUser,\n    logout: logoutUser,\n    clearError,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","checkAuth","token","localStorage","getItem","userData","getCurrentUser","console","removeItem","loginUser","email","password","response","login","data","setItem","success","_error$response","_error$response$data","errorMessage","message","registerUser","fullName","register","_error$response2","_error$response2$data","logoutUser","clearError","value","logout","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cameron/projects/exitready-pro/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is logged in on mount\r\n  const checkAuth = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const userData = await getCurrentUser();\r\n        setUser(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      // Clear invalid token\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await login({ email, password });\r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('token', token);\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const registerUser = async (email, password, fullName) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await register({ email, password, fullName });\r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('token', token);\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logoutUser = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  // Clear error function\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // Check authentication on component mount\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login: loginUser,\r\n    register: registerUser,\r\n    logout: logoutUser,\r\n    clearError,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}